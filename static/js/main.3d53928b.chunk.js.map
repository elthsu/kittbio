{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","useState","page","setPage","usualWakeTime","setUsualWakeTime","usualBedTime","setUsualBedTime","flightLatest","setFlightLatest","preferredWake","setPreferredWake","preferredBed","setPreferredBed","arrivalBed","setArrivalBed","homeTimeZone","setHomeTimeZone","destinationTimeZone","setDestinationTimeZone","departureTime","setDepartureTime","arrivalTime","setArrivalTime","positiveResult","handlePage","handlePageBack","handleInput","e","setStateFunction","target","value","handleReset","className","onKeyDown","key","style","display","flexDirection","src","alt","onClick","onChange","type","marginTop","marginBottom","alignItems","marginLeft","wakeuptime","bedtime","wakefullness","napLength","napPlacement","napStart","napMidPoint","napEnd","napStartDestinationTimeZone","napEndDestinationTimeZone","napStartMod","moment","isBefore","split","diff","Math","abs","add","format","subtract","console","log","fontWeight","handleGenerateResult","pageContent","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3d53928b.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport moment from \"moment\"\nimport './App.css';\n\nfunction App() {\n  const [page, setPage] = useState(1)\n  const [usualWakeTime, setUsualWakeTime] = useState(\"\")\n  const [usualBedTime, setUsualBedTime] = useState(\"\")\n  const [flightLatest, setFlightLatest] = useState(\"\")\n  const [preferredWake, setPreferredWake] = useState(\"\")\n  const [preferredBed, setPreferredBed] = useState(\"\")\n  const [arrivalBed, setArrivalBed] = useState(\"\")\n  const [homeTimeZone, setHomeTimeZone] = useState(\"\")\n  const [destinationTimeZone, setDestinationTimeZone] = useState(\"\")\n  const [departureTime, setDepartureTime] = useState(\"\")\n  const [arrivalTime, setArrivalTime] = useState(\"\")\n\n\n  const [positiveResult, setPostiveResult] = useState(true)\n\n  \n  const handlePage = () => {\n    setPage(page + 1)\n  }\n\n  const handlePageBack = () => {\n    setPage(page - 1)\n  }\n\n  const handleInput = (e, setStateFunction) => {\n    setStateFunction(e.target.value)\n  }\n\n  const handleKeyDown = (e) =>{\n    if (e.key === \"Enter\"){\n      setPage(page + 1)\n    }\n  }\n\n  const handleReset = () => {\n    setPage(1)\n    setUsualWakeTime(\"\")\n    setUsualBedTime(\"\")\n    setFlightLatest(\"\")\n    setPreferredWake(\"\")\n    setPreferredBed(\"\")\n    setArrivalBed(\"\")\n    setHomeTimeZone(\"\")\n    setDestinationTimeZone(\"\")\n    setDepartureTime(\"\")\n    setArrivalTime(\"\")\n  }\n\n  const handleGenerateResult = () => {\n    let wakeuptime, bedtime, wakefullness, nextDay, napLength, napPlacement, napStart, napMidPoint, napEnd, napStartDestinationTimeZone, napEndDestinationTimeZone, napStartMod\n\n    if(moment(usualWakeTime, 'H:mm').isBefore(moment(flightLatest, 'H:mm'))){\n      wakeuptime = usualWakeTime\n    }\n    else {\n      wakeuptime = flightLatest\n    }\n\n    if(moment(preferredBed, 'H:mm').isBefore(moment(arrivalBed, 'H:mm')) && +preferredBed.split(\":\")[0] > 10 && +arrivalBed.split(\":\")[0] > 10){\n      bedtime = arrivalBed\n      nextDay = false\n    }\n    else if (moment(arrivalBed, 'H:mm').isBefore(moment(preferredBed, 'H:mm')) && +arrivalBed.split(\":\")[0] < 10 && +preferredBed.split(\":\")[0] > 10) {\n      bedtime = arrivalBed\n      nextDay = true\n    }\n    else if (moment(arrivalBed, 'H:mm').isBefore(moment(preferredBed, 'H:mm')) && +arrivalBed.split(\":\")[0] < 10 && +preferredBed.split(\":\")[0] < 10) {\n      bedtime = preferredBed\n      nextDay = false\n    }\n    else if (moment(preferredBed, 'H:mm').isBefore(moment(arrivalBed, 'H:mm')) && +preferredBed.split(\":\")[0] < 10 && +arrivalBed.split(\":\")[0] < 10) {\n      bedtime = arrivalBed\n      nextDay = false\n    }\n    else if (moment(preferredBed, 'H:mm').isBefore(moment(arrivalBed, 'H:mm')) && +preferredBed.split(\":\")[0] < 10 && +arrivalBed.split(\":\")[0] > 10) {\n      bedtime = preferredBed\n      nextDay = false\n    }\n    else {\n      bedtime = preferredBed\n      nextDay = false\n    }\n\n    wakefullness = moment(departureTime, \"H:mm\").diff(moment(wakeuptime, \"H:mm\"), 'minutes') + moment(bedtime, \"H:mm\").diff(moment(arrivalTime, \"H:mm\"), 'minutes') + 1440\n\n    if(moment(departureTime, \"H:mm\").isBefore(moment(arrivalTime, \"H:mm\"))){\n      wakefullness += moment(arrivalTime, \"H:mm\").diff(moment(departureTime, \"H:mm\"), \"minutes\") - (Math.abs(+(destinationTimeZone.split(\":\")[0] - +homeTimeZone.split(\":\")[0])) * 60)\n    }\n    else {\n      wakefullness += 1440 + (moment(arrivalTime, \"H:mm\").diff(moment(departureTime, \"H:mm\"), \"minutes\")) - (Math.abs(+(destinationTimeZone.split(\":\")[0] - +homeTimeZone.split(\":\")[0])) * 60)\n    }\n\n    if(wakefullness <= 1200){\n      napLength = 0\n    }\n    else if(wakefullness <= 1440) {\n      napLength = 60\n    }\n    else if(wakefullness <= 1680) {\n      napLength = 120\n    }\n    else if(wakefullness <= 2160) {\n      napLength = 240\n    }\n    else if(wakefullness <= 2520) {\n      napLength = 360\n    }\n    else {\n      napLength = 480\n    }\n\n    napPlacement = Math.abs(1440 + (moment(preferredWake, \"H:mm\").diff(moment(usualBedTime, \"H:mm\"), \"minutes\")) - (Math.abs(+(destinationTimeZone.split(\":\")[0] - +homeTimeZone.split(\":\")[0])) * 60))\n\n    napPlacement = napPlacement / 2\n\n    napMidPoint = moment(usualBedTime, \"H:mm\").add(napPlacement, \"minutes\").format(\"HH:mm\")\n\n    napStart = moment(napMidPoint, \"H:mm\").subtract(napLength/2, \"minutes\").format(\"HH:mm\")\n\n    napEnd = moment(napMidPoint, \"H:mm\").add(napLength/2, \"minutes\").format(\"HH:mm\")\n\n    napStartDestinationTimeZone = moment(napStart, \"H:mm\").add((Math.abs(+(destinationTimeZone.split(\":\")[0] - +homeTimeZone.split(\":\")[0])) * 60), \"minutes\").format(\"HH:mm\")\n\n    napEndDestinationTimeZone = moment(napEnd, \"H:mm\").add((Math.abs(+(destinationTimeZone.split(\":\")[0] - +homeTimeZone.split(\":\")[0])) * 60), \"minutes\").format(\"HH:mm\")\n\n    if(moment(napStart, \"HH:mm\").diff(moment(departureTime, \"HH:mm\"), \"minutes\") > -240 && moment(napStart, \"HH:mm\").diff(moment(departureTime, \"HH:mm\"), \"minutes\") < 60){\n      napStartMod = true\n    }\n    else {\n      napStartMod = false\n    } \n\n    console.log(napStart, moment(departureTime, \"HH:mm\").subtract(4, \"hours\").format(\"HH:mm\"), moment(departureTime, \"HH:mm\").add(1, \"hours\").format(\"HH:mm\"))\n\n    // console.log(moment(napStart, \"HH:mm\").isBetween(moment(departureTime, \"HH:mm\").subtract(4, \"hours\"), moment(departureTime, \"HH:mm\").add(1, \"hours\")))\n\n    return (\n      <>\n      <div style={{fontWeight: \"bold\"}}>Output: {(!napStartMod) ? 'Yes, the nap can be placed without modifying the time.' : 'The nap cannot be placed without modifying the time.'}</div>\n      { (positiveResult) \n          ? <> \n              <div>Nap Start Time: {napStart} GMT{homeTimeZone} / {napStartDestinationTimeZone} GMT{destinationTimeZone}</div>\n              <div>Nap End Time: {napEnd} GMT{homeTimeZone} / {napEndDestinationTimeZone} GMT{destinationTimeZone}</div>\n            </>\n          : null\n      }\n      </>\n    )\n  }\n\n  const pageContent = () => {\n    switch (page) {\n      case 1:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <img src=\"https://images.squarespace-cdn.com/content/v1/5c7a2fd37d0c9126da3d843c/1562803135324-WLCCTL6QR2HA88Y618GE/ke17ZwdGBToddI8pDm48kIpdYUXyUPp68j8r-94H55uoCXeSvxnTEQmG4uwOsdIceAoHiyRoc52GMN5_2H8WpyR2vltzBlW4Cyl67bitASHy9QBakoD0epjUgC2DFGLhLAF3UQuW-eMj1sczAxf9yA/favicon.ico?format=\" className=\"App-logo\" alt=\"logo\" />\n              <img src=\"https://images.squarespace-cdn.com/content/5c7a2fd37d0c9126da3d843c/1562803231536-FVRID9H0HA2Z90PZO5WM/KITT-BIO-logo.png?content-type=image%2Fpng\" alt=\"title\" />  \n            </div>\n            <button \n              onClick={handlePage}>\n              start\n            </button>\n          </>\n        )\n\n      case 2:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div>\n                Please enter your USUAL WAKE TIME (HOME)\n              </div>\n              <input value={usualWakeTime} onChange={(e)=>handleInput(e, setUsualWakeTime)} type=\"textarea\"/>\n\n            </div>\n            <button onClick={handlePage}>\n              next\n            </button>\n          </>\n        )\n\n      case 3:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div>\n                Please enter your USUAL BED TIME (HOME)\n              </div>\n              <input value={usualBedTime} onChange={(e)=>handleInput(e, setUsualBedTime)} type=\"textarea\"/>\n\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <button onClick={handlePageBack}>\n                back\n              </button>\n              <button onClick={handlePage}>\n                next\n              </button>\n            </div>\n          </>\n        )\n      \n      case 4:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div>\n                Please enter your FLIGHT DAY LATEST WAKE TIME\n              </div>\n              <input value={flightLatest} onChange={(e)=>handleInput(e, setFlightLatest)} type=\"textarea\"/>\n\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <button onClick={handlePageBack}>\n                back\n              </button>\n              <button onClick={handlePage}>\n                next\n              </button>\n            </div>\n          </>\n        )\n      \n      case 5:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div>\n                Please enter your PREFERRED WAKE TIME (DESTINATION)\n              </div>\n              <input value={preferredWake} onChange={(e)=>handleInput(e, setPreferredWake)} type=\"textarea\"/>\n\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <button onClick={handlePageBack}>\n                back\n              </button>\n              <button onClick={handlePage}>\n                next\n              </button>\n            </div>\n          </>\n        )\n\n      case 6:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div>\n                Please enter your PREFERRED BED TIME (DESTINATION)\n              </div>\n              <input value={preferredBed} onChange={(e)=>handleInput(e, setPreferredBed)} type=\"textarea\"/>\n\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <button onClick={handlePageBack}>\n                back\n              </button>\n              <button onClick={handlePage}>\n                next\n              </button>\n            </div>\n          </>\n        )\n      \n      case 7:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div>\n                Please enter your ARRIVAL DAY EARLIEST BED TIME \n              </div>\n              <input value={arrivalBed} onChange={(e)=>handleInput(e, setArrivalBed)} type=\"textarea\"/>\n\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <button onClick={handlePageBack}>\n                back\n              </button>\n              <button onClick={handlePage}>\n                next\n              </button>\n            </div>\n          </>\n        )\n\n      case 8:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div>\n                Please enter your HOME TIME ZONE\n              </div>\n              <select value={homeTimeZone} onChange={(e)=>handleInput(e, setHomeTimeZone)}>\n                <option></option>\n                <option value=\"-12:00\">(GMT -12:00) Eniwetok, Kwajalein</option>\n                <option value=\"-11:00\">(GMT -11:00) Midway Island, Samoa</option>\n                <option value=\"-10:00\">(GMT -10:00) Hawaii</option>\n                <option value=\"-09:50\">(GMT -9:30) Taiohae</option>\n                <option value=\"-09:00\">(GMT -9:00) Alaska</option>\n                <option value=\"-08:00\">(GMT -8:00) Pacific Time (US &amp; Canada)</option>\n                <option value=\"-07:00\">(GMT -7:00) Mountain Time (US &amp; Canada)</option>\n                <option value=\"-06:00\">(GMT -6:00) Central Time (US &amp; Canada), Mexico City</option>\n                <option value=\"-05:00\">(GMT -5:00) Eastern Time (US &amp; Canada), Bogota, Lima</option>\n                <option value=\"-04:50\">(GMT -4:30) Caracas</option>\n                <option value=\"-04:00\">(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz</option>\n                <option value=\"-03:50\">(GMT -3:30) Newfoundland</option>\n                <option value=\"-03:00\">(GMT -3:00) Brazil, Buenos Aires, Georgetown</option>\n                <option value=\"-02:00\">(GMT -2:00) Mid-Atlantic</option>\n                <option value=\"-01:00\">(GMT -1:00) Azores, Cape Verde Islands</option>\n                <option value=\"+00:00\">(GMT) Western Europe Time, London, Lisbon, Casablanca</option>\n                <option value=\"+01:00\">(GMT +1:00) Brussels, Copenhagen, Madrid, Paris</option>\n                <option value=\"+02:00\">(GMT +2:00) Kaliningrad, South Africa</option>\n                <option value=\"+03:00\">(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg</option>\n                <option value=\"+03:50\">(GMT +3:30) Tehran</option>\n                <option value=\"+04:00\">(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi</option>\n                <option value=\"+04:50\">(GMT +4:30) Kabul</option>\n                <option value=\"+05:00\">(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent</option>\n                <option value=\"+05:50\">(GMT +5:30) Bombay, Calcutta, Madras, New Delhi</option>\n                <option value=\"+05:75\">(GMT +5:45) Kathmandu, Pokhara</option>\n                <option value=\"+06:00\">(GMT +6:00) Almaty, Dhaka, Colombo</option>\n                <option value=\"+06:50\">(GMT +6:30) Yangon, Mandalay</option>\n                <option value=\"+07:00\">(GMT +7:00) Bangkok, Hanoi, Jakarta</option>\n                <option value=\"+08:00\">(GMT +8:00) Beijing, Perth, Singapore, Hong Kong</option>\n                <option value=\"+08:75\">(GMT +8:45) Eucla</option>\n                <option value=\"+09:00\">(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk</option>\n                <option value=\"+09:50\">(GMT +9:30) Adelaide, Darwin</option>\n                <option value=\"+10:00\">(GMT +10:00) Eastern Australia, Guam, Vladivostok</option>\n                <option value=\"+10:50\">(GMT +10:30) Lord Howe Island</option>\n                <option value=\"+11:00\">(GMT +11:00) Magadan, Solomon Islands, New Caledonia</option>\n                <option value=\"+11:50\">(GMT +11:30) Norfolk Island</option>\n                <option value=\"+12:00\">(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka</option>\n                <option value=\"+12:75\">(GMT +12:45) Chatham Islands</option>\n                <option value=\"+13:00\">(GMT +13:00) Apia, Nukualofa</option>\n                <option value=\"+14:00\">(GMT +14:00) Line Islands, Tokelau</option>\n              </select>\n\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <button onClick={handlePageBack}>\n                back\n              </button>\n              <button onClick={handlePage}>\n                next\n              </button>\n            </div>\n          </>\n        )\n      \n      case 9:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div>\n                Please enter your DESTINATION TIME ZONE\n              </div>\n              <select value={destinationTimeZone} onChange={(e)=>handleInput(e, setDestinationTimeZone)}>\n                <option></option>\n                <option value=\"-12:00\">(GMT -12:00) Eniwetok, Kwajalein</option>\n                <option value=\"-11:00\">(GMT -11:00) Midway Island, Samoa</option>\n                <option value=\"-10:00\">(GMT -10:00) Hawaii</option>\n                <option value=\"-09:50\">(GMT -9:30) Taiohae</option>\n                <option value=\"-09:00\">(GMT -9:00) Alaska</option>\n                <option value=\"-08:00\">(GMT -8:00) Pacific Time (US &amp; Canada)</option>\n                <option value=\"-07:00\">(GMT -7:00) Mountain Time (US &amp; Canada)</option>\n                <option value=\"-06:00\">(GMT -6:00) Central Time (US &amp; Canada), Mexico City</option>\n                <option value=\"-05:00\">(GMT -5:00) Eastern Time (US &amp; Canada), Bogota, Lima</option>\n                <option value=\"-04:50\">(GMT -4:30) Caracas</option>\n                <option value=\"-04:00\">(GMT -4:00) Atlantic Time (Canada), Caracas, La Paz</option>\n                <option value=\"-03:50\">(GMT -3:30) Newfoundland</option>\n                <option value=\"-03:00\">(GMT -3:00) Brazil, Buenos Aires, Georgetown</option>\n                <option value=\"-02:00\">(GMT -2:00) Mid-Atlantic</option>\n                <option value=\"-01:00\">(GMT -1:00) Azores, Cape Verde Islands</option>\n                <option value=\"+00:00\">(GMT) Western Europe Time, London, Lisbon, Casablanca</option>\n                <option value=\"+01:00\">(GMT +1:00) Brussels, Copenhagen, Madrid, Paris</option>\n                <option value=\"+02:00\">(GMT +2:00) Kaliningrad, South Africa</option>\n                <option value=\"+03:00\">(GMT +3:00) Baghdad, Riyadh, Moscow, St. Petersburg</option>\n                <option value=\"+03:50\">(GMT +3:30) Tehran</option>\n                <option value=\"+04:00\">(GMT +4:00) Abu Dhabi, Muscat, Baku, Tbilisi</option>\n                <option value=\"+04:50\">(GMT +4:30) Kabul</option>\n                <option value=\"+05:00\">(GMT +5:00) Ekaterinburg, Islamabad, Karachi, Tashkent</option>\n                <option value=\"+05:50\">(GMT +5:30) Bombay, Calcutta, Madras, New Delhi</option>\n                <option value=\"+05:75\">(GMT +5:45) Kathmandu, Pokhara</option>\n                <option value=\"+06:00\">(GMT +6:00) Almaty, Dhaka, Colombo</option>\n                <option value=\"+06:50\">(GMT +6:30) Yangon, Mandalay</option>\n                <option value=\"+07:00\">(GMT +7:00) Bangkok, Hanoi, Jakarta</option>\n                <option value=\"+08:00\">(GMT +8:00) Beijing, Perth, Singapore, Hong Kong</option>\n                <option value=\"+08:75\">(GMT +8:45) Eucla</option>\n                <option value=\"+09:00\">(GMT +9:00) Tokyo, Seoul, Osaka, Sapporo, Yakutsk</option>\n                <option value=\"+09:50\">(GMT +9:30) Adelaide, Darwin</option>\n                <option value=\"+10:00\">(GMT +10:00) Eastern Australia, Guam, Vladivostok</option>\n                <option value=\"+10:50\">(GMT +10:30) Lord Howe Island</option>\n                <option value=\"+11:00\">(GMT +11:00) Magadan, Solomon Islands, New Caledonia</option>\n                <option value=\"+11:50\">(GMT +11:30) Norfolk Island</option>\n                <option value=\"+12:00\">(GMT +12:00) Auckland, Wellington, Fiji, Kamchatka</option>\n                <option value=\"+12:75\">(GMT +12:45) Chatham Islands</option>\n                <option value=\"+13:00\">(GMT +13:00) Apia, Nukualofa</option>\n                <option value=\"+14:00\">(GMT +14:00) Line Islands, Tokelau</option>\n              </select>\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <button onClick={handlePageBack}>\n                back\n              </button>\n              <button onClick={handlePage}>\n                next\n              </button>\n            </div>\n          </>\n        )\n\n      case 10:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div>\n                Please enter your FLIGHT DEPARTURE/ARRIVAL TIME\n              </div>\n              <label style={{marginTop: \"20px\"}}>DEPARTURE TIME</label>\n              <input style={{marginTop: \"10px\"}} value={departureTime} onChange={(e)=>handleInput(e, setDepartureTime)} type=\"textarea\"/>\n              <label style={{marginTop: \"20px\"}}>ARRIVAL TIME</label>\n              <input style={{marginTop: \"10px\"}} value={arrivalTime} onChange={(e)=>handleInput(e, setArrivalTime)} type=\"textarea\"/>\n\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <button onClick={handlePageBack}>\n                back\n              </button>\n              <button onClick={handlePage}>\n                next\n              </button>\n            </div>\n          </>\n        )\n\n      case 11:\n        return (\n          <>\n            <div style={{display:\"flex\", flexDirection:\"column\"}}>\n              <div style={{marginBottom: \"50px\"}}>\n                RESULT:\n              </div>\n              <div style={{display:\"flex\", flexDirection:\"column\", alignItems: \"start\"}}>\n                <div>Usual Wake Time (Home): {usualWakeTime}</div>\n                <div>Usual Bed Time (Home): {usualBedTime}</div>\n                <div>Flight Day Latest Wake Time: {flightLatest}</div>\n                <div>Preferred Wake Time (Destination): {preferredWake}</div>\n                <div>Preferred Bed Time (Destination): {preferredBed}</div>\n                <div>Arrival Day Earliest Bed Time: {arrivalBed}</div>\n                <div>Home Time Zone: GMT{homeTimeZone}</div>\n                <div>Destination Time Zone: GMT{destinationTimeZone}</div>\n                <div style={{display:\"flex\", flexDirection:\"column\", alignItems: \"start\"}}>\n                  Flight Departure/Arrival Time:\n                  <div style={{marginLeft: '50px'}}>Depart: {departureTime}</div>\n                  <div style={{marginLeft: '50px'}}>Arrive: {arrivalTime}</div>\n                </div>\n                <div style={{marginTop: \"50px\", display:\"flex\", flexDirection:\"column\", alignItems: \"start\"}}>\n                  {\n                    handleGenerateResult()\n                  }\n                </div>\n              </div>\n            </div>\n            <div style={{display:\"flex\", flexDirection:\"row\"}}>\n              <button onClick={handleReset}>\n                reset\n              </button>\n            </div>\n          </>\n        )\n      \n      default:\n        break;\n    }\n  }\n\n  return (\n    <div className=\"App\" onKeyDown={handleKeyDown}>\n      <header className=\"App-header\">\n        {pageContent()}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}